---
## REF: https://github.com/billimek/k8s-gitops/blob/2d48e3ba92d984e21e5c2267d10d48e867898e0b/default/blocky/blocky.yaml
## REF: https://github.com/jr0dd/home-ops/blob/main/cluster/apps/networking/blocky/helm-release.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app blocky
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  interval: 1h
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      blocky:
        replicas: 2
        strategy: RollingUpdate
        containers:
          app:
            image:
              repository: ghcr.io/0xerr0r/blocky
              tag: v0.26.2@sha256:46150ee0a8a414170ac861343ab7640eb0182a736f7d59f4c0c41383443932fd
            env:
              TZ: America/Chicago
            # resources:
            #   requests:
            #     cpu: 10m
            #     memory: 50Mi
            #   limits:
            #     memory: 750Mi
      cache:
        containers:
          server:
            image:
              repository: public.ecr.aws/docker/library/redis
              tag: 8.2.0@sha256:90558a4ffc48862c9c8512a4bff663019d2c943bb066339de8455cae9a5b989a
            command: redis-server
            env:
              REDIS_REPLICATION_MODE: master
            resources:
              requests:
                cpu: 10m
                memory: 10Mi
              limits:
                memory: 100Mi
    defaultPodOptions:
      nodeSelector:
        kubernetes.io/arch: amd64
    service:
      app:
        controller: *app
        ports:
          http:
            port: 4000
      dns:
        controller: *app
        type: LoadBalancer
        externalTrafficPolicy: Local
        annotations:
          metallb.io/loadBalancerIPs: ${BLOCKY_IP_ADDRESS}
        ports:
          http:
            port: 4000
            protocol: TCP
          tcp:
            port: 53
            protocol: TCP
          udp:
            port: 53
            protocol: UDP
      cache:
        controller: cache
        ports:
          http:
            port: 6379
    serviceMonitor:
      main:
        enabled: true
        serviceName: blocky-app
        # selector:
        #   matchLabels:
        #     app.kubernetes.io/name: *app
        # labels:
        #   release: kube-prometheus-stack #idk why this is required
        endpoints:
          - interval: 30s
            path: /metrics
            port: http
            scrapeTimeout: 10s
    persistence:
      config:
        enabled: true
        type: configMap
        name: blocky
        advancedMounts:
          blocky:
            app:
              - path: /app/config.yml
                subPath: config.yaml
